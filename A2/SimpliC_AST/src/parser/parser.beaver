%class "LangParser";
%package "lang.ast";

%embed {:
	static public class SyntaxError extends RuntimeException { public SyntaxError(String msg) {super(msg);}}
	// Disable syntax error recovery
	protected void recoverFromError(Symbol token, TokenStream in) {
		throw new SyntaxError("Cannot recover from the syntax error");
	}
:};

%terminals ID,LEFTPARA, RIGHTPARA, LEFTBRACKET, RIGHTBRACKET, INT, ASSIGN, SEMICOLON, NUM;

%typeof program = "Program";
%typeof function = "Function";
%typeof functionID = "FunctionID";
%typeof function_list = "List";
%typeof declr = "Declaration";
%typeof id_use = "IdUse";
%typeof id_decl = "IdDecl";
%typeof binding = "Binding";

%goal program;

program = function_list;
function = INT FunctionID LEFTPARA RIGHTPARA LEFTBRACKET RIGHTBRACKET;

function_list = function.a {: return new List().add(a); :};

declr = INT id_decl SEMICOLON;
binding = id_use ASSIGN NUM SEMICOLON;

id_use = ID.id {: return new IdUse(id); :} ;
functionID = ID.id {: return new FunctionID(id); :};
id_decl = ID.id {: return new IdDecl(id); :} ;