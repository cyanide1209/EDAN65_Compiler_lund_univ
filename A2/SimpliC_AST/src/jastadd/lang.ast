Program ::= Function*;

Function ::= FunctionID [Expression];
FunctionID ::= <ID>;

abstract Expression;
Binding:Expression ::= IdUse Term;
Declaration:Expression ::= IdDecl [Term];
ReturnState:Expression ::= Variable;
If:Expression ::= ComparisonContainer [Expression];
IdUse : Variable ::= <ID>;
IdDecl ::= <ID>;
Nbr : Lowprio ::= <NUM>;

abstract Term;
Sum:Term ::= left:Term right:Term;
Sub:Term ::= left:Term right:Term;

abstract Lowprio:Term;
Mul:Lowprio ::= left:Lowprio right:Lowprio;
Div:Lowprio ::= left:Lowprio right:Lowprio;
Mod:Lowprio ::= left:Lowprio right:Lowprio;

ComparisonContainer;
abstract Comparison;
Equals:Comparison ::= left:Term right:Term;
NotEquals:Comparison ::= left:Term right:Term;
LessThan:Comparison ::= left:Term right:Term;
LessThanEqual:Comparison ::= left:Term right:Term;
GreaterThan:Comparison ::= left:Term right:Term;
GreaterThanEqual:Comparison ::= left:Term right:Term;

abstract Variable:Lowprio;
