Program ::= Function*;

Function ::= IdDecl Argument* Statement*;
Argument ::= IdDecl;


abstract Statement;
Binding:Statement ::= IdUse Expression;
Declaration:Statement ::= IdDecl [Expression];
ReturnState:Statement ::= Expression;
FunctionCallStmt:Statement ::= FunctionCall;
If:Statement ::= Expression Statement* [Else];
Else ::= Statement*;
While:Statement ::= Expression Statement*;

IdDecl ::= <ID>;

abstract Expression;
Comparison:Expression ::= left:Term right:Term;

abstract Term:Expression;
binaryExpression:Term ::= left:Term right:Term;
FunctionCall:Term ::= name:IdUse argumentList:IdUse*;
Minus:Term ::= Firstprio;
Firstprio:Term ::= Expression;
IdUse:Term ::= <ID>;
Nbr:Term ::= <NUM>;



